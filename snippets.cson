# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.text.html.php':
  'PDO Fetch':
    'prefix': 'fe'
    'body': 'fetch(PDO::FETCH_ASSOC)'
  'PDO Fetch All':
    'prefix': 'fa'
    'body': 'fetchAll(PDO::FETCH_ASSOC)'
  'pre var_dump':
    'prefix': 'pvd'
    'body': 'echo "<pre>\\\\n\\\\${1:$var}:\\\\n"; var_dump( ${1:$var} ); echo "</pre>";'
  'echo var_dump':
    'prefix': 'evd'
    'body': 'echo "\\\\n\\\\${1:$var}:\\\\n"; var_dump( ${1:$var} ); echo "\\\\n";'
  'pre print_r':
    'prefix': 'ppr'
    'body': 'echo "<pre>"; print_r( ${1:$var} ); echo "</pre>";'
  'if_mine':
    'prefix': 'iff'
    'body': 'if ( ${1:condition} ) {\n\t${0:# code...}\n}\n'
  'd_REQUEST':
    'prefix': 'rq'
    'body': '\$_REQUEST["${1:Key}"]'
  'd_POST':
    'prefix': 'po'
    'body': '\$_POST["${1:Key}"]'
  'CurlSetup':
    'prefix': 'csc'
    'body': '\$ch = curl_init();\ncurl_setopt( \$ch, CURLOPT_RETURNTRANSFER, true );\ncurl_setopt( \$ch, CURLOPT_URL, "URL_GOES_HERE" );\ncurl_setopt( \$ch, CURLOPT_POST, true );\ncurl_setopt( \$ch, CURLOPT_POSTFIELDS, $PostData );\n\$CurlResult = curl_exec( \$ch );'
  'QuestionMarkList':
    'prefix': 'qml'
    'body': '\$questionMarks = implode( ",", array_fill( 0, count( \$where ), "?" ) ); // make a comma separated list of question marks, of equal length to $where\n\$update = \$database->prepare("DO WHAT YOU WANT WHERE ImportantColumn IN ( " . \$questionMarks . ")");'
  'FindDelimiter':
    'prefix': 'dlm'
    'body': 'if ( strpos( trim(\$STRING), "\\\\t" ) !== false ) {\n\t\$delim = "\\\\t";\n} elseif ( strpos( trim(\$STRING), " " ) !== false ) {\n\t\$delim = " ";\n} elseif ( strpos( trim(\$STRING), "," ) !== false ) {\n\t\$delim = ",";\n} else {\n\t\$delim = false;\n}\nif ( \$delim ) {\n\t$WHATEVER = explode( $delim, trim(\$STRING) );\n}'
  'PHPMailer6':
    'prefix': 'pm6'
    'body': '/*Paths may need to be adjusted! Other stuff may need to be adjusted! This is just a rough starting point!\n* Remember: the part that declares PHPMailer CANNOT be enclosed in {} in any way!\n* Don\'t ask me why, it\'s stupid, just make sure it\'s not enclosed in curlies. Usually that means\n* putting it at the top of the script. The rest of the code that defines the mail object etc can be\n* placed wherever you want\n*/\n\nuse PHPMailer\\\\PHPMailer\\\\PHPMailer;\nrequire $GLOBALS["BasePath"] . "htdocs/ps/PHPMailer6/src/Exception.php";\nrequire $GLOBALS["BasePath"] . "htdocs/ps/PHPMailer6/src/OAuth.php";\nrequire $GLOBALS["BasePath"] . "htdocs/ps/PHPMailer6/src/PHPMailer.php";\nrequire $GLOBALS["BasePath"] . "htdocs/ps/PHPMailer6/src/POP3.php";\nrequire $GLOBALS["BasePath"] . "htdocs/ps/PHPMailer6/src/SMTP.php";\n\n$mail = new PHPMailer();\n$mail->IsSMTP();\n$mail->SMTPAuth = false;\n$mail->IsHTML(true);\n$mailServer = chooseMailServer( $mail );\nif ( $mailServer["status"] ) {\n\t$mail = $mailServer["mail"];\n} else {\n\techo "<pre>" . print_r( $mailServer, 1 ) . "</pre>";\n}\n\n$mail->From = "WHOEVER@WHEREVER.com";\n$mail->AddAddress("WHOEVER@WHEREVER.com");\n\n$mail->Subject = "SUBJECT";\n$EmailBody = "<p>EMAILBODY</p>";\n$mail->Body = $EmailBody;\nif ( !$mail->Send() ) {\n\techo "email could not send :(";\n} else {\n\techo "email sent :)";\n}'

'.source.js':
  '$ Doc Ready':
    'prefix': 'ddr'
    'body': '$(document).ready(function(){\n\t${1://code}\n});'
  'jQuery Doc Ready':
    'prefix': 'jdr'
    'body': 'jQuery(document).ready(function(){\n\t${1://code}\n});'
  'jQuery Loading Timer':
    'prefix': 'jql'
    'body': '(function() {\n\tvar jQueryLoading = setInterval(function() {\n\t\tif (typeof($) === "function") {\n\t\t\tclearInterval(jQueryLoading);\n\t\t\t${1://code}\n\t\t}\n\t}, 100);\n})();'
  'Interval':
    'prefix': 'si'
    'body': 'var Interval = setInterval(function() {\n\tif ( ${1:WHATEVER} ) {\n\t\tclearInterval(Interval);\n\t\t${2://code}\n\t}\n}, 100);'
  'Self-Executing Interval':
    'prefix': 'sei'
    'body': '(function() {\n\tvar Interval = setInterval(function() {\n\t\tif ( ${1:WHATEVER} ) {\n\t\t\tclearInterval(Interval);\n\t\t\t${2://code}\n\t\t}\n\t}, 100);\n})();'
  'Self Executing Function':
    'prefix': 'sef'
    'body': '(function(){\n\t${1://code}\n})();'
  'GetElByID':
    'prefix': 'gbi'
    'body': 'document.getElementById("${1:}")'

